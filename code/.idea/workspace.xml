<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="bcdbd813-a55b-44a4-84e4-8f65c05a131e" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/../DSL/.idea/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/../DSL/.idea/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../DSL/.idea/DSL.iml" beforeDir="false" afterPath="$PROJECT_DIR$/../DSL/.idea/DSL.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../DSL/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../DSL/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../DSL/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../DSL/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../DSL/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../DSL/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../DSL/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/../DSL/main.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../README.md" beforeDir="false" afterPath="$PROJECT_DIR$/../README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/code.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/code.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.travis.yml" beforeDir="false" afterPath="$PROJECT_DIR$/.travis.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.py" beforeDir="false" afterPath="$PROJECT_DIR$/build.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pyproject.toml" beforeDir="false" afterPath="$PROJECT_DIR$/pyproject.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/setup.py" beforeDir="false" afterPath="$PROJECT_DIR$/setup.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/python/hangman.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/python/hangman.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/python/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/python/main.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/unittest/python/hangman_unittests.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/unittest/python/hangman_unittests.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/unittest/python/main_unittest.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/unittest/python/main_unittest.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/build/lib/hangman.py" beforeDir="false" afterPath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/build/lib/hangman.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/build/lib/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/build/lib/main.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/hangman.egg-info/PKG-INFO" beforeDir="false" afterPath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/hangman.egg-info/PKG-INFO" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/hangman.egg-info/zip-safe" beforeDir="false" afterPath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/hangman.egg-info/zip-safe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/hangman.py" beforeDir="false" afterPath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/hangman.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/main.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/setup.py" beforeDir="false" afterPath="$PROJECT_DIR$/target/dist/hangman-1.0.dev0/setup.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/logs/install_dependencies/venv_build_install_logs" beforeDir="false" afterPath="$PROJECT_DIR$/target/logs/install_dependencies/venv_build_install_logs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/reports/distutils/bdist_wheel" beforeDir="false" afterPath="$PROJECT_DIR$/target/reports/distutils/bdist_wheel" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/reports/distutils/sdist" beforeDir="false" afterPath="$PROJECT_DIR$/target/reports/distutils/sdist" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/reports/distutils/twine_check.log" beforeDir="false" afterPath="$PROJECT_DIR$/target/reports/distutils/twine_check.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/reports/hangman_coverage" beforeDir="false" afterPath="$PROJECT_DIR$/target/reports/hangman_coverage" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/reports/hangman_coverage.json" beforeDir="false" afterPath="$PROJECT_DIR$/target/reports/hangman_coverage.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/reports/hangman_coverage.xml" beforeDir="false" afterPath="$PROJECT_DIR$/target/reports/hangman_coverage.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/reports/pybuilder.plugins.python.unittest_plugin.run_unit_tests_coverage" beforeDir="false" afterPath="$PROJECT_DIR$/target/reports/pybuilder.plugins.python.unittest_plugin.run_unit_tests_coverage" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/reports/pybuilder.plugins.python.unittest_plugin.run_unit_tests_coverage.json" beforeDir="false" afterPath="$PROJECT_DIR$/target/reports/pybuilder.plugins.python.unittest_plugin.run_unit_tests_coverage.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/reports/pybuilder.plugins.python.unittest_plugin.run_unit_tests_coverage.xml" beforeDir="false" afterPath="$PROJECT_DIR$/target/reports/pybuilder.plugins.python.unittest_plugin.run_unit_tests_coverage.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/reports/unittest" beforeDir="false" afterPath="$PROJECT_DIR$/target/reports/unittest" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/reports/unittest.json" beforeDir="false" afterPath="$PROJECT_DIR$/target/reports/unittest.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
        <option value="Python Unit Test" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2IS1ZmXctgh0wcWkXd4pg5hpBkA" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;F:/BHT/CS for big data/C_expressions_py/C3_name_test.py&quot;
  }
}</component>
  <component name="RunManager" selected="Python tests.Python tests for hangman_unittests.HangmanTests">
    <configuration name="main (1)" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="code" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/main/python" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/src/main/python/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="code" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for hangman_unittests.HangmanTests" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="code" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;hangman_unittests.HangmanTests&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for hangman_unittests.HangmanTests.test_check_letter" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="code" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;hangman_unittests.HangmanTests.test_check_letter&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for hangman_unittests.HangmanTests.test_display_hangman" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="code" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;hangman_unittests.HangmanTests.test_display_hangman&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for hangman_unittests.HangmanTests.test_word_bank" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="code" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;hangman_unittests.HangmanTests.test_word_bank&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for hangman_unittests.HangmanTests" />
        <item itemvalue="Python.main (1)" />
        <item itemvalue="Python tests.Python tests for hangman_unittests.HangmanTests.test_word_bank" />
        <item itemvalue="Python tests.Python tests for hangman_unittests.HangmanTests.test_check_letter" />
        <item itemvalue="Python tests.Python tests for hangman_unittests.HangmanTests.test_display_hangman" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="bcdbd813-a55b-44a4-84e4-8f65c05a131e" name="Changes" comment="" />
      <created>1670160229148</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1670160229148</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/build.py</url>
          <line>14</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>